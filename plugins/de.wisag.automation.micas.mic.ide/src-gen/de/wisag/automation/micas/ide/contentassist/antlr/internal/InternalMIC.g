/*
 * generated by Xtext 2.12.0
 */
grammar InternalMIC;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package de.wisag.automation.micas.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.wisag.automation.micas.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.wisag.automation.micas.services.MICGrammarAccess;

}
@parser::members {
	private MICGrammarAccess grammarAccess;

	public void setGrammarAccess(MICGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getModuleParserRuleCall()); }
		ruleModule
		{ after(grammarAccess.getModelAccess().getModuleParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModule
entryRuleModule
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuleAccess().getGroup()); }
		(rule__Module__Group__0)
		{ after(grammarAccess.getModuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSymbol
entryRuleSymbol
:
{ before(grammarAccess.getSymbolRule()); }
	 ruleSymbol
{ after(grammarAccess.getSymbolRule()); } 
	 EOF 
;

// Rule Symbol
ruleSymbol 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSymbolAccess().getAlternatives()); }
		(rule__Symbol__Alternatives)
		{ after(grammarAccess.getSymbolAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMetaData
entryRuleMetaData
:
{ before(grammarAccess.getMetaDataRule()); }
	 ruleMetaData
{ after(grammarAccess.getMetaDataRule()); } 
	 EOF 
;

// Rule MetaData
ruleMetaData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMetaDataAccess().getGroup()); }
		(rule__MetaData__Group__0)
		{ after(grammarAccess.getMetaDataAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWordValue
entryRuleWordValue
:
{ before(grammarAccess.getWordValueRule()); }
	 ruleWordValue
{ after(grammarAccess.getWordValueRule()); } 
	 EOF 
;

// Rule WordValue
ruleWordValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWordValueAccess().getAlternatives()); }
		(rule__WordValue__Alternatives)
		{ after(grammarAccess.getWordValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWordVar
entryRuleWordVar
:
{ before(grammarAccess.getWordVarRule()); }
	 ruleWordVar
{ after(grammarAccess.getWordVarRule()); } 
	 EOF 
;

// Rule WordVar
ruleWordVar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWordVarAccess().getGroup()); }
		(rule__WordVar__Group__0)
		{ after(grammarAccess.getWordVarAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWordConst
entryRuleWordConst
:
{ before(grammarAccess.getWordConstRule()); }
	 ruleWordConst
{ after(grammarAccess.getWordConstRule()); } 
	 EOF 
;

// Rule WordConst
ruleWordConst 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWordConstAccess().getGroup()); }
		(rule__WordConst__Group__0)
		{ after(grammarAccess.getWordConstAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloatValue
entryRuleFloatValue
:
{ before(grammarAccess.getFloatValueRule()); }
	 ruleFloatValue
{ after(grammarAccess.getFloatValueRule()); } 
	 EOF 
;

// Rule FloatValue
ruleFloatValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatValueAccess().getAlternatives()); }
		(rule__FloatValue__Alternatives)
		{ after(grammarAccess.getFloatValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloatVar
entryRuleFloatVar
:
{ before(grammarAccess.getFloatVarRule()); }
	 ruleFloatVar
{ after(grammarAccess.getFloatVarRule()); } 
	 EOF 
;

// Rule FloatVar
ruleFloatVar 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatVarAccess().getGroup()); }
		(rule__FloatVar__Group__0)
		{ after(grammarAccess.getFloatVarAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloatConst
entryRuleFloatConst
:
{ before(grammarAccess.getFloatConstRule()); }
	 ruleFloatConst
{ after(grammarAccess.getFloatConstRule()); } 
	 EOF 
;

// Rule FloatConst
ruleFloatConst 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatConstAccess().getGroup()); }
		(rule__FloatConst__Group__0)
		{ after(grammarAccess.getFloatConstAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDirectValue
entryRuleDirectValue
:
{ before(grammarAccess.getDirectValueRule()); }
	 ruleDirectValue
{ after(grammarAccess.getDirectValueRule()); } 
	 EOF 
;

// Rule DirectValue
ruleDirectValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDirectValueAccess().getValueAssignment()); }
		(rule__DirectValue__ValueAssignment)
		{ after(grammarAccess.getDirectValueAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReference
entryRuleReference
:
{ before(grammarAccess.getReferenceRule()); }
	 ruleReference
{ after(grammarAccess.getReferenceRule()); } 
	 EOF 
;

// Rule Reference
ruleReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReferenceAccess().getAlternatives()); }
		(rule__Reference__Alternatives)
		{ after(grammarAccess.getReferenceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFGAMessageConstantReference
entryRuleFGAMessageConstantReference
:
{ before(grammarAccess.getFGAMessageConstantReferenceRule()); }
	 ruleFGAMessageConstantReference
{ after(grammarAccess.getFGAMessageConstantReferenceRule()); } 
	 EOF 
;

// Rule FGAMessageConstantReference
ruleFGAMessageConstantReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFGAMessageConstantReferenceAccess().getGroup()); }
		(rule__FGAMessageConstantReference__Group__0)
		{ after(grammarAccess.getFGAMessageConstantReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFGAAnalogValueReference
entryRuleFGAAnalogValueReference
:
{ before(grammarAccess.getFGAAnalogValueReferenceRule()); }
	 ruleFGAAnalogValueReference
{ after(grammarAccess.getFGAAnalogValueReferenceRule()); } 
	 EOF 
;

// Rule FGAAnalogValueReference
ruleFGAAnalogValueReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFGAAnalogValueReferenceAccess().getGroup()); }
		(rule__FGAAnalogValueReference__Group__0)
		{ after(grammarAccess.getFGAAnalogValueReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFGAValueReference
entryRuleFGAValueReference
:
{ before(grammarAccess.getFGAValueReferenceRule()); }
	 ruleFGAValueReference
{ after(grammarAccess.getFGAValueReferenceRule()); } 
	 EOF 
;

// Rule FGAValueReference
ruleFGAValueReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFGAValueReferenceAccess().getGroup()); }
		(rule__FGAValueReference__Group__0)
		{ after(grammarAccess.getFGAValueReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFGAMeasuredValueReference
entryRuleFGAMeasuredValueReference
:
{ before(grammarAccess.getFGAMeasuredValueReferenceRule()); }
	 ruleFGAMeasuredValueReference
{ after(grammarAccess.getFGAMeasuredValueReferenceRule()); } 
	 EOF 
;

// Rule FGAMeasuredValueReference
ruleFGAMeasuredValueReference 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFGAMeasuredValueReferenceAccess().getGroup()); }
		(rule__FGAMeasuredValueReference__Group__0)
		{ after(grammarAccess.getFGAMeasuredValueReferenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTask
entryRuleTask
:
{ before(grammarAccess.getTaskRule()); }
	 ruleTask
{ after(grammarAccess.getTaskRule()); } 
	 EOF 
;

// Rule Task
ruleTask 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTaskAccess().getGroup()); }
		(rule__Task__Group__0)
		{ after(grammarAccess.getTaskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstruction
entryRuleInstruction
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionAccess().getAlternatives()); }
		(rule__Instruction__Alternatives)
		{ after(grammarAccess.getInstructionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleModuleInvokation
entryRuleModuleInvokation
:
{ before(grammarAccess.getModuleInvokationRule()); }
	 ruleModuleInvokation
{ after(grammarAccess.getModuleInvokationRule()); } 
	 EOF 
;

// Rule ModuleInvokation
ruleModuleInvokation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuleInvokationAccess().getGroup()); }
		(rule__ModuleInvokation__Group__0)
		{ after(grammarAccess.getModuleInvokationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSymbolAccessor
entryRuleSymbolAccessor
:
{ before(grammarAccess.getSymbolAccessorRule()); }
	 ruleSymbolAccessor
{ after(grammarAccess.getSymbolAccessorRule()); } 
	 EOF 
;

// Rule SymbolAccessor
ruleSymbolAccessor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSymbolAccessorAccess().getAlternatives()); }
		(rule__SymbolAccessor__Alternatives)
		{ after(grammarAccess.getSymbolAccessorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFloat
entryRuleFloat
:
{ before(grammarAccess.getFloatRule()); }
	 ruleFloat
{ after(grammarAccess.getFloatRule()); } 
	 EOF 
;

// Rule Float
ruleFloat 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFloatAccess().getXFLOATTerminalRuleCall()); }
		RULE_XFLOAT
		{ after(grammarAccess.getFloatAccess().getXFLOATTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTaskStrategy
entryRuleTaskStrategy
:
{ before(grammarAccess.getTaskStrategyRule()); }
	 ruleTaskStrategy
{ after(grammarAccess.getTaskStrategyRule()); } 
	 EOF 
;

// Rule TaskStrategy
ruleTaskStrategy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTaskStrategyAccess().getAlternatives()); }
		(rule__TaskStrategy__Alternatives)
		{ after(grammarAccess.getTaskStrategyAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Symbol__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSymbolAccess().getWordValueParserRuleCall_0()); }
		ruleWordValue
		{ after(grammarAccess.getSymbolAccess().getWordValueParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSymbolAccess().getFloatValueParserRuleCall_1()); }
		ruleFloatValue
		{ after(grammarAccess.getSymbolAccess().getFloatValueParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getSymbolAccess().getReferenceParserRuleCall_2()); }
		ruleReference
		{ after(grammarAccess.getSymbolAccess().getReferenceParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getSymbolAccess().getMetaDataParserRuleCall_3()); }
		ruleMetaData
		{ after(grammarAccess.getSymbolAccess().getMetaDataParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WordValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWordValueAccess().getWordVarParserRuleCall_0()); }
		ruleWordVar
		{ after(grammarAccess.getWordValueAccess().getWordVarParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getWordValueAccess().getWordConstParserRuleCall_1()); }
		ruleWordConst
		{ after(grammarAccess.getWordValueAccess().getWordConstParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatValueAccess().getFloatVarParserRuleCall_0()); }
		ruleFloatVar
		{ after(grammarAccess.getFloatValueAccess().getFloatVarParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFloatValueAccess().getFloatConstParserRuleCall_1()); }
		ruleFloatConst
		{ after(grammarAccess.getFloatValueAccess().getFloatConstParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReferenceAccess().getFGAMessageConstantReferenceParserRuleCall_0()); }
		ruleFGAMessageConstantReference
		{ after(grammarAccess.getReferenceAccess().getFGAMessageConstantReferenceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getReferenceAccess().getFGAAnalogValueReferenceParserRuleCall_1()); }
		ruleFGAAnalogValueReference
		{ after(grammarAccess.getReferenceAccess().getFGAAnalogValueReferenceParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getReferenceAccess().getFGAValueReferenceParserRuleCall_2()); }
		ruleFGAValueReference
		{ after(grammarAccess.getReferenceAccess().getFGAValueReferenceParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getReferenceAccess().getFGAMeasuredValueReferenceParserRuleCall_3()); }
		ruleFGAMeasuredValueReference
		{ after(grammarAccess.getReferenceAccess().getFGAMeasuredValueReferenceParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getModuleInvokationParserRuleCall_0()); }
		ruleModuleInvokation
		{ after(grammarAccess.getInstructionAccess().getModuleInvokationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getMetaDataParserRuleCall_1()); }
		ruleMetaData
		{ after(grammarAccess.getInstructionAccess().getMetaDataParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolAccessor__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSymbolAccessorAccess().getGroup_0()); }
		(rule__SymbolAccessor__Group_0__0)
		{ after(grammarAccess.getSymbolAccessorAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getSymbolAccessorAccess().getDirectValueParserRuleCall_1()); }
		ruleDirectValue
		{ after(grammarAccess.getSymbolAccessorAccess().getDirectValueParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskStrategy__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskStrategyAccess().getCyclKeyword_0()); }
		'cycl'
		{ after(grammarAccess.getTaskStrategyAccess().getCyclKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTaskStrategyAccess().getBackKeyword_1()); }
		'back'
		{ after(grammarAccess.getTaskStrategyAccess().getBackKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTaskStrategyAccess().getInitKeyword_2()); }
		'init'
		{ after(grammarAccess.getTaskStrategyAccess().getInitKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getTaskStrategyAccess().getCyclsKeyword_3()); }
		'cycls'
		{ after(grammarAccess.getTaskStrategyAccess().getCyclsKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getTaskStrategyAccess().getEvntsKeyword_4()); }
		'evnts'
		{ after(grammarAccess.getTaskStrategyAccess().getEvntsKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getTaskStrategyAccess().getBacksKeyword_5()); }
		'backs'
		{ after(grammarAccess.getTaskStrategyAccess().getBacksKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getTaskStrategyAccess().getInitsKeyword_6()); }
		'inits'
		{ after(grammarAccess.getTaskStrategyAccess().getInitsKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getTaskStrategyAccess().getCYCLKeyword_7()); }
		'CYCL'
		{ after(grammarAccess.getTaskStrategyAccess().getCYCLKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getTaskStrategyAccess().getBACKKeyword_8()); }
		'BACK'
		{ after(grammarAccess.getTaskStrategyAccess().getBACKKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getTaskStrategyAccess().getINITKeyword_9()); }
		'INIT'
		{ after(grammarAccess.getTaskStrategyAccess().getINITKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getTaskStrategyAccess().getCYCLSKeyword_10()); }
		'CYCLS'
		{ after(grammarAccess.getTaskStrategyAccess().getCYCLSKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getTaskStrategyAccess().getEVNTSKeyword_11()); }
		'EVNTS'
		{ after(grammarAccess.getTaskStrategyAccess().getEVNTSKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getTaskStrategyAccess().getBACKSKeyword_12()); }
		'BACKS'
		{ after(grammarAccess.getTaskStrategyAccess().getBACKSKeyword_12()); }
	)
	|
	(
		{ before(grammarAccess.getTaskStrategyAccess().getINITSKeyword_13()); }
		'INITS'
		{ after(grammarAccess.getTaskStrategyAccess().getINITSKeyword_13()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__0__Impl
	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getModulePrologAssignment_0()); }
	(rule__Module__ModulePrologAssignment_0)*
	{ after(grammarAccess.getModuleAccess().getModulePrologAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__1__Impl
	rule__Module__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getMODULKeyword_1()); }
	'MODUL'
	{ after(grammarAccess.getModuleAccess().getMODULKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__2__Impl
	rule__Module__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getModuleAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__3__Impl
	rule__Module__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getTypeAssignment_3()); }
	(rule__Module__TypeAssignment_3)
	{ after(grammarAccess.getModuleAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__4__Impl
	rule__Module__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getModuleAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__5__Impl
	rule__Module__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getValueAssignment_5()); }
	(rule__Module__ValueAssignment_5)
	{ after(grammarAccess.getModuleAccess().getValueAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__6__Impl
	rule__Module__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getModuleAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__7__Impl
	rule__Module__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getDecalarationsAssignment_7()); }
	(rule__Module__DecalarationsAssignment_7)*
	{ after(grammarAccess.getModuleAccess().getDecalarationsAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__8__Impl
	rule__Module__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getTasksAssignment_8()); }
	(rule__Module__TasksAssignment_8)*
	{ after(grammarAccess.getModuleAccess().getTasksAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getENDMODULKeyword_9()); }
	'ENDMODUL'
	{ after(grammarAccess.getModuleAccess().getENDMODULKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MetaData__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaData__Group__0__Impl
	rule__MetaData__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaData__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaDataAccess().getNameAssignment_0()); }
	(rule__MetaData__NameAssignment_0)?
	{ after(grammarAccess.getMetaDataAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaData__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MetaData__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaData__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMetaDataAccess().getValueAssignment_1()); }
	(rule__MetaData__ValueAssignment_1)
	{ after(grammarAccess.getMetaDataAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WordVar__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WordVar__Group__0__Impl
	rule__WordVar__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WordVar__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWordVarAccess().getWordVKeyword_0()); }
	'WordV'
	{ after(grammarAccess.getWordVarAccess().getWordVKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WordVar__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WordVar__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WordVar__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWordVarAccess().getNameAssignment_1()); }
	(rule__WordVar__NameAssignment_1)
	{ after(grammarAccess.getWordVarAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WordConst__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WordConst__Group__0__Impl
	rule__WordConst__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WordConst__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWordConstAccess().getWordKKeyword_0()); }
	'WordK'
	{ after(grammarAccess.getWordConstAccess().getWordKKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WordConst__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WordConst__Group__1__Impl
	rule__WordConst__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WordConst__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWordConstAccess().getNameAssignment_1()); }
	(rule__WordConst__NameAssignment_1)
	{ after(grammarAccess.getWordConstAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WordConst__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WordConst__Group__2__Impl
	rule__WordConst__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WordConst__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWordConstAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getWordConstAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WordConst__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WordConst__Group__3__Impl
	rule__WordConst__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WordConst__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWordConstAccess().getValueAssignment_3()); }
	(rule__WordConst__ValueAssignment_3)
	{ after(grammarAccess.getWordConstAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WordConst__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WordConst__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WordConst__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWordConstAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getWordConstAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FloatVar__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatVar__Group__0__Impl
	rule__FloatVar__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatVar__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatVarAccess().getFloatVKeyword_0()); }
	'FloatV'
	{ after(grammarAccess.getFloatVarAccess().getFloatVKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatVar__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatVar__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatVar__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatVarAccess().getNameAssignment_1()); }
	(rule__FloatVar__NameAssignment_1)
	{ after(grammarAccess.getFloatVarAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FloatConst__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatConst__Group__0__Impl
	rule__FloatConst__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConst__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatConstAccess().getFloatKKeyword_0()); }
	'FloatK'
	{ after(grammarAccess.getFloatConstAccess().getFloatKKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConst__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatConst__Group__1__Impl
	rule__FloatConst__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConst__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatConstAccess().getNameAssignment_1()); }
	(rule__FloatConst__NameAssignment_1)
	{ after(grammarAccess.getFloatConstAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConst__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatConst__Group__2__Impl
	rule__FloatConst__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConst__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatConstAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getFloatConstAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConst__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatConst__Group__3__Impl
	rule__FloatConst__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConst__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatConstAccess().getValueAssignment_3()); }
	(rule__FloatConst__ValueAssignment_3)
	{ after(grammarAccess.getFloatConstAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConst__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FloatConst__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConst__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFloatConstAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getFloatConstAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FGAMessageConstantReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FGAMessageConstantReference__Group__0__Impl
	rule__FGAMessageConstantReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMessageConstantReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFGAMessageConstantReferenceAccess().getIPAMBKeyword_0()); }
	'IPAMB'
	{ after(grammarAccess.getFGAMessageConstantReferenceAccess().getIPAMBKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMessageConstantReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FGAMessageConstantReference__Group__1__Impl
	rule__FGAMessageConstantReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMessageConstantReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFGAMessageConstantReferenceAccess().getNameAssignment_1()); }
	(rule__FGAMessageConstantReference__NameAssignment_1)
	{ after(grammarAccess.getFGAMessageConstantReferenceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMessageConstantReference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FGAMessageConstantReference__Group__2__Impl
	rule__FGAMessageConstantReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMessageConstantReference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFGAMessageConstantReferenceAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getFGAMessageConstantReferenceAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMessageConstantReference__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FGAMessageConstantReference__Group__3__Impl
	rule__FGAMessageConstantReference__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMessageConstantReference__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFGAMessageConstantReferenceAccess().getRowAssignment_3()); }
	(rule__FGAMessageConstantReference__RowAssignment_3)
	{ after(grammarAccess.getFGAMessageConstantReferenceAccess().getRowAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMessageConstantReference__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FGAMessageConstantReference__Group__4__Impl
	rule__FGAMessageConstantReference__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMessageConstantReference__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFGAMessageConstantReferenceAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getFGAMessageConstantReferenceAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMessageConstantReference__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FGAMessageConstantReference__Group__5__Impl
	rule__FGAMessageConstantReference__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMessageConstantReference__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFGAMessageConstantReferenceAccess().getColumnAssignment_5()); }
	(rule__FGAMessageConstantReference__ColumnAssignment_5)
	{ after(grammarAccess.getFGAMessageConstantReferenceAccess().getColumnAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMessageConstantReference__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FGAMessageConstantReference__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMessageConstantReference__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFGAMessageConstantReferenceAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getFGAMessageConstantReferenceAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FGAAnalogValueReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FGAAnalogValueReference__Group__0__Impl
	rule__FGAAnalogValueReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAAnalogValueReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFGAAnalogValueReferenceAccess().getIPAAWKeyword_0()); }
	'IPAAW'
	{ after(grammarAccess.getFGAAnalogValueReferenceAccess().getIPAAWKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAAnalogValueReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FGAAnalogValueReference__Group__1__Impl
	rule__FGAAnalogValueReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAAnalogValueReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFGAAnalogValueReferenceAccess().getNameAssignment_1()); }
	(rule__FGAAnalogValueReference__NameAssignment_1)
	{ after(grammarAccess.getFGAAnalogValueReferenceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAAnalogValueReference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FGAAnalogValueReference__Group__2__Impl
	rule__FGAAnalogValueReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAAnalogValueReference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFGAAnalogValueReferenceAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getFGAAnalogValueReferenceAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAAnalogValueReference__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FGAAnalogValueReference__Group__3__Impl
	rule__FGAAnalogValueReference__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAAnalogValueReference__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFGAAnalogValueReferenceAccess().getRowAssignment_3()); }
	(rule__FGAAnalogValueReference__RowAssignment_3)
	{ after(grammarAccess.getFGAAnalogValueReferenceAccess().getRowAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAAnalogValueReference__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FGAAnalogValueReference__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAAnalogValueReference__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFGAAnalogValueReferenceAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getFGAAnalogValueReferenceAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FGAValueReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FGAValueReference__Group__0__Impl
	rule__FGAValueReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAValueReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFGAValueReferenceAccess().getIPAZWKeyword_0()); }
	'IPAZW'
	{ after(grammarAccess.getFGAValueReferenceAccess().getIPAZWKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAValueReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FGAValueReference__Group__1__Impl
	rule__FGAValueReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAValueReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFGAValueReferenceAccess().getNameAssignment_1()); }
	(rule__FGAValueReference__NameAssignment_1)
	{ after(grammarAccess.getFGAValueReferenceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAValueReference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FGAValueReference__Group__2__Impl
	rule__FGAValueReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAValueReference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFGAValueReferenceAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getFGAValueReferenceAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAValueReference__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FGAValueReference__Group__3__Impl
	rule__FGAValueReference__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAValueReference__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFGAValueReferenceAccess().getRowAssignment_3()); }
	(rule__FGAValueReference__RowAssignment_3)
	{ after(grammarAccess.getFGAValueReferenceAccess().getRowAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAValueReference__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FGAValueReference__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAValueReference__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFGAValueReferenceAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getFGAValueReferenceAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FGAMeasuredValueReference__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FGAMeasuredValueReference__Group__0__Impl
	rule__FGAMeasuredValueReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMeasuredValueReference__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFGAMeasuredValueReferenceAccess().getIPAMWKeyword_0()); }
	'IPAMW'
	{ after(grammarAccess.getFGAMeasuredValueReferenceAccess().getIPAMWKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMeasuredValueReference__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FGAMeasuredValueReference__Group__1__Impl
	rule__FGAMeasuredValueReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMeasuredValueReference__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFGAMeasuredValueReferenceAccess().getNameAssignment_1()); }
	(rule__FGAMeasuredValueReference__NameAssignment_1)
	{ after(grammarAccess.getFGAMeasuredValueReferenceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMeasuredValueReference__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FGAMeasuredValueReference__Group__2__Impl
	rule__FGAMeasuredValueReference__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMeasuredValueReference__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFGAMeasuredValueReferenceAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getFGAMeasuredValueReferenceAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMeasuredValueReference__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FGAMeasuredValueReference__Group__3__Impl
	rule__FGAMeasuredValueReference__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMeasuredValueReference__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFGAMeasuredValueReferenceAccess().getRowAssignment_3()); }
	(rule__FGAMeasuredValueReference__RowAssignment_3)
	{ after(grammarAccess.getFGAMeasuredValueReferenceAccess().getRowAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMeasuredValueReference__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FGAMeasuredValueReference__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMeasuredValueReference__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFGAMeasuredValueReferenceAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getFGAMeasuredValueReferenceAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__0__Impl
	rule__Task__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getTaskPrologAssignment_0()); }
	(rule__Task__TaskPrologAssignment_0)*
	{ after(grammarAccess.getTaskAccess().getTaskPrologAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__1__Impl
	rule__Task__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getTASKKeyword_1()); }
	'TASK'
	{ after(grammarAccess.getTaskAccess().getTASKKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__2__Impl
	rule__Task__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getTaskAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__3__Impl
	rule__Task__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getIndexAssignment_3()); }
	(rule__Task__IndexAssignment_3)
	{ after(grammarAccess.getTaskAccess().getIndexAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__4__Impl
	rule__Task__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getTaskAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__5__Impl
	rule__Task__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getTypeAssignment_5()); }
	(rule__Task__TypeAssignment_5)
	{ after(grammarAccess.getTaskAccess().getTypeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__6__Impl
	rule__Task__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getGroup_6()); }
	(rule__Task__Group_6__0)?
	{ after(grammarAccess.getTaskAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__7__Impl
	rule__Task__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getRightParenthesisKeyword_7()); }
	')'
	{ after(grammarAccess.getTaskAccess().getRightParenthesisKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__8__Impl
	rule__Task__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getInstructionsAssignment_8()); }
	(rule__Task__InstructionsAssignment_8)*
	{ after(grammarAccess.getTaskAccess().getInstructionsAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getENDEKeyword_9()); }
	'ENDE'
	{ after(grammarAccess.getTaskAccess().getENDEKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_6__0__Impl
	rule__Task__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getCommaKeyword_6_0()); }
	','
	{ after(grammarAccess.getTaskAccess().getCommaKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Task__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTaskAccess().getCycleTimeAssignment_6_1()); }
	(rule__Task__CycleTimeAssignment_6_1)
	{ after(grammarAccess.getTaskAccess().getCycleTimeAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleInvokation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleInvokation__Group__0__Impl
	rule__ModuleInvokation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInvokation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleInvokationAccess().getModuleNameAssignment_0()); }
	(rule__ModuleInvokation__ModuleNameAssignment_0)
	{ after(grammarAccess.getModuleInvokationAccess().getModuleNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInvokation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleInvokation__Group__1__Impl
	rule__ModuleInvokation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInvokation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleInvokationAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getModuleInvokationAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInvokation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleInvokation__Group__2__Impl
	rule__ModuleInvokation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInvokation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleInvokationAccess().getGroup_2()); }
	(rule__ModuleInvokation__Group_2__0)?
	{ after(grammarAccess.getModuleInvokationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInvokation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleInvokation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInvokation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleInvokationAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getModuleInvokationAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleInvokation__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleInvokation__Group_2__0__Impl
	rule__ModuleInvokation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInvokation__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleInvokationAccess().getArgumentsAssignment_2_0()); }
	(rule__ModuleInvokation__ArgumentsAssignment_2_0)
	{ after(grammarAccess.getModuleInvokationAccess().getArgumentsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInvokation__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleInvokation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInvokation__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleInvokationAccess().getGroup_2_1()); }
	(rule__ModuleInvokation__Group_2_1__0)*
	{ after(grammarAccess.getModuleInvokationAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleInvokation__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleInvokation__Group_2_1__0__Impl
	rule__ModuleInvokation__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInvokation__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleInvokationAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getModuleInvokationAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInvokation__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ModuleInvokation__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInvokation__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleInvokationAccess().getArgumentsAssignment_2_1_1()); }
	(rule__ModuleInvokation__ArgumentsAssignment_2_1_1)
	{ after(grammarAccess.getModuleInvokationAccess().getArgumentsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolAccessor__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SymbolAccessor__Group_0__0__Impl
	rule__SymbolAccessor__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolAccessor__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSymbolAccessorAccess().getGroup_0_0()); }
	(rule__SymbolAccessor__Group_0_0__0)?
	{ after(grammarAccess.getSymbolAccessorAccess().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolAccessor__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SymbolAccessor__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolAccessor__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSymbolAccessorAccess().getSymbolAssignment_0_1()); }
	(rule__SymbolAccessor__SymbolAssignment_0_1)
	{ after(grammarAccess.getSymbolAccessorAccess().getSymbolAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SymbolAccessor__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SymbolAccessor__Group_0_0__0__Impl
	rule__SymbolAccessor__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolAccessor__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSymbolAccessorAccess().getWriteaccessKeyword_0_0_0()); }
	'writeaccess='
	{ after(grammarAccess.getSymbolAccessorAccess().getWriteaccessKeyword_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolAccessor__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SymbolAccessor__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolAccessor__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSymbolAccessorAccess().getWritingAssignment_0_0_1()); }
	(rule__SymbolAccessor__WritingAssignment_0_0_1)
	{ after(grammarAccess.getSymbolAccessorAccess().getWritingAssignment_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__ModulePrologAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getModulePrologMetaDataParserRuleCall_0_0()); }
		ruleMetaData
		{ after(grammarAccess.getModuleAccess().getModulePrologMetaDataParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getTypeIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getModuleAccess().getTypeIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ValueAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getValueINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getModuleAccess().getValueINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__DecalarationsAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getDecalarationsSymbolParserRuleCall_7_0()); }
		ruleSymbol
		{ after(grammarAccess.getModuleAccess().getDecalarationsSymbolParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__TasksAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getTasksTaskParserRuleCall_8_0()); }
		ruleTask
		{ after(grammarAccess.getModuleAccess().getTasksTaskParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaData__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaDataAccess().getNameNothingKeyword_0_0()); }
		(
			{ before(grammarAccess.getMetaDataAccess().getNameNothingKeyword_0_0()); }
			'\u00B0nothing'
			{ after(grammarAccess.getMetaDataAccess().getNameNothingKeyword_0_0()); }
		)
		{ after(grammarAccess.getMetaDataAccess().getNameNothingKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MetaData__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMetaDataAccess().getValueRAW_METADATETerminalRuleCall_1_0()); }
		RULE_RAW_METADATE
		{ after(grammarAccess.getMetaDataAccess().getValueRAW_METADATETerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WordVar__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWordVarAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getWordVarAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WordConst__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWordConstAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getWordConstAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WordConst__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWordConstAccess().getValueINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getWordConstAccess().getValueINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatVar__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatVarAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFloatVarAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConst__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatConstAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFloatConstAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FloatConst__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFloatConstAccess().getValueFloatParserRuleCall_3_0()); }
		ruleFloat
		{ after(grammarAccess.getFloatConstAccess().getValueFloatParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DirectValue__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectValueAccess().getValueINTTerminalRuleCall_0()); }
		RULE_INT
		{ after(grammarAccess.getDirectValueAccess().getValueINTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMessageConstantReference__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFGAMessageConstantReferenceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFGAMessageConstantReferenceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMessageConstantReference__RowAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFGAMessageConstantReferenceAccess().getRowINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getFGAMessageConstantReferenceAccess().getRowINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMessageConstantReference__ColumnAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFGAMessageConstantReferenceAccess().getColumnINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getFGAMessageConstantReferenceAccess().getColumnINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAAnalogValueReference__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFGAAnalogValueReferenceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFGAAnalogValueReferenceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAAnalogValueReference__RowAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFGAAnalogValueReferenceAccess().getRowINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getFGAAnalogValueReferenceAccess().getRowINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAValueReference__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFGAValueReferenceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFGAValueReferenceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAValueReference__RowAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFGAValueReferenceAccess().getRowINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getFGAValueReferenceAccess().getRowINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMeasuredValueReference__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFGAMeasuredValueReferenceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFGAMeasuredValueReferenceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FGAMeasuredValueReference__RowAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFGAMeasuredValueReferenceAccess().getRowINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getFGAMeasuredValueReferenceAccess().getRowINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__TaskPrologAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getTaskPrologMetaDataParserRuleCall_0_0()); }
		ruleMetaData
		{ after(grammarAccess.getTaskAccess().getTaskPrologMetaDataParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__IndexAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getIndexINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getTaskAccess().getIndexINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__TypeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getTypeTaskStrategyParserRuleCall_5_0()); }
		ruleTaskStrategy
		{ after(grammarAccess.getTaskAccess().getTypeTaskStrategyParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__CycleTimeAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getCycleTimeINTTerminalRuleCall_6_1_0()); }
		RULE_INT
		{ after(grammarAccess.getTaskAccess().getCycleTimeINTTerminalRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__InstructionsAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTaskAccess().getInstructionsInstructionParserRuleCall_8_0()); }
		ruleInstruction
		{ after(grammarAccess.getTaskAccess().getInstructionsInstructionParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInvokation__ModuleNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleInvokationAccess().getModuleNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getModuleInvokationAccess().getModuleNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInvokation__ArgumentsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleInvokationAccess().getArgumentsSymbolAccessorParserRuleCall_2_0_0()); }
		ruleSymbolAccessor
		{ after(grammarAccess.getModuleInvokationAccess().getArgumentsSymbolAccessorParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInvokation__ArgumentsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleInvokationAccess().getArgumentsSymbolAccessorParserRuleCall_2_1_1_0()); }
		ruleSymbolAccessor
		{ after(grammarAccess.getModuleInvokationAccess().getArgumentsSymbolAccessorParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolAccessor__WritingAssignment_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSymbolAccessorAccess().getWritingTrueKeyword_0_0_1_0()); }
		(
			{ before(grammarAccess.getSymbolAccessorAccess().getWritingTrueKeyword_0_0_1_0()); }
			'true'
			{ after(grammarAccess.getSymbolAccessorAccess().getWritingTrueKeyword_0_0_1_0()); }
		)
		{ after(grammarAccess.getSymbolAccessorAccess().getWritingTrueKeyword_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SymbolAccessor__SymbolAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSymbolAccessorAccess().getSymbolSymbolCrossReference_0_1_0()); }
		(
			{ before(grammarAccess.getSymbolAccessorAccess().getSymbolSymbolIDTerminalRuleCall_0_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSymbolAccessorAccess().getSymbolSymbolIDTerminalRuleCall_0_1_0_1()); }
		)
		{ after(grammarAccess.getSymbolAccessorAccess().getSymbolSymbolCrossReference_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_RAW_METADATE : ';' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_XFLOAT : ('-'|'+')? ('0'..'9')+ '.' ('0'..'9')+;

RULE_INT : '-'? ('0'..'9')+;

RULE_ID : ('$'|'&'|'A'..'Z'|'a'..'z'|'_'|'/'|'0'..'9'|'\\') ('&'|'A'..'Z'|'a'..'z'|'0'..'9'|'@'|'\u00C4'|'\u00DC'|'\u00D6'|'\u00E4'|'\u00FC'|'\u00F6'|'\u00DF'|'<'|'>'|'.'|'_'|'/'|'+'|'-'|'~'|'='|'?')+;

RULE_SPACE : (' '|'\t');

RULE_EOL : ('\r'|'\n')+;
