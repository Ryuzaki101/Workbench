/**
 * generated by Xtext 2.12.0
 */
package de.wisag.automation.micas.mIC.impl;

import de.wisag.automation.micas.mIC.MICPackage;
import de.wisag.automation.micas.mIC.MetaData;
import de.wisag.automation.micas.mIC.Module;
import de.wisag.automation.micas.mIC.Symbol;
import de.wisag.automation.micas.mIC.Task;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Module</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.wisag.automation.micas.mIC.impl.ModuleImpl#getModuleProlog <em>Module Prolog</em>}</li>
 *   <li>{@link de.wisag.automation.micas.mIC.impl.ModuleImpl#getType <em>Type</em>}</li>
 *   <li>{@link de.wisag.automation.micas.mIC.impl.ModuleImpl#getValue <em>Value</em>}</li>
 *   <li>{@link de.wisag.automation.micas.mIC.impl.ModuleImpl#getDecalarations <em>Decalarations</em>}</li>
 *   <li>{@link de.wisag.automation.micas.mIC.impl.ModuleImpl#getTasks <em>Tasks</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ModuleImpl extends ModelImpl implements Module
{
  /**
   * The cached value of the '{@link #getModuleProlog() <em>Module Prolog</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getModuleProlog()
   * @generated
   * @ordered
   */
  protected EList<MetaData> moduleProlog;

  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final String TYPE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected String type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected static final int VALUE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getValue() <em>Value</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected int value = VALUE_EDEFAULT;

  /**
   * The cached value of the '{@link #getDecalarations() <em>Decalarations</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDecalarations()
   * @generated
   * @ordered
   */
  protected EList<Symbol> decalarations;

  /**
   * The cached value of the '{@link #getTasks() <em>Tasks</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTasks()
   * @generated
   * @ordered
   */
  protected EList<Task> tasks;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ModuleImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MICPackage.Literals.MODULE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<MetaData> getModuleProlog()
  {
    if (moduleProlog == null)
    {
      moduleProlog = new EObjectContainmentEList<MetaData>(MetaData.class, this, MICPackage.MODULE__MODULE_PROLOG);
    }
    return moduleProlog;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setType(String newType)
  {
    String oldType = type;
    type = newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MICPackage.MODULE__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setValue(int newValue)
  {
    int oldValue = value;
    value = newValue;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MICPackage.MODULE__VALUE, oldValue, value));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Symbol> getDecalarations()
  {
    if (decalarations == null)
    {
      decalarations = new EObjectContainmentEList<Symbol>(Symbol.class, this, MICPackage.MODULE__DECALARATIONS);
    }
    return decalarations;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Task> getTasks()
  {
    if (tasks == null)
    {
      tasks = new EObjectContainmentEList<Task>(Task.class, this, MICPackage.MODULE__TASKS);
    }
    return tasks;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MICPackage.MODULE__MODULE_PROLOG:
        return ((InternalEList<?>)getModuleProlog()).basicRemove(otherEnd, msgs);
      case MICPackage.MODULE__DECALARATIONS:
        return ((InternalEList<?>)getDecalarations()).basicRemove(otherEnd, msgs);
      case MICPackage.MODULE__TASKS:
        return ((InternalEList<?>)getTasks()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MICPackage.MODULE__MODULE_PROLOG:
        return getModuleProlog();
      case MICPackage.MODULE__TYPE:
        return getType();
      case MICPackage.MODULE__VALUE:
        return getValue();
      case MICPackage.MODULE__DECALARATIONS:
        return getDecalarations();
      case MICPackage.MODULE__TASKS:
        return getTasks();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MICPackage.MODULE__MODULE_PROLOG:
        getModuleProlog().clear();
        getModuleProlog().addAll((Collection<? extends MetaData>)newValue);
        return;
      case MICPackage.MODULE__TYPE:
        setType((String)newValue);
        return;
      case MICPackage.MODULE__VALUE:
        setValue((Integer)newValue);
        return;
      case MICPackage.MODULE__DECALARATIONS:
        getDecalarations().clear();
        getDecalarations().addAll((Collection<? extends Symbol>)newValue);
        return;
      case MICPackage.MODULE__TASKS:
        getTasks().clear();
        getTasks().addAll((Collection<? extends Task>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MICPackage.MODULE__MODULE_PROLOG:
        getModuleProlog().clear();
        return;
      case MICPackage.MODULE__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case MICPackage.MODULE__VALUE:
        setValue(VALUE_EDEFAULT);
        return;
      case MICPackage.MODULE__DECALARATIONS:
        getDecalarations().clear();
        return;
      case MICPackage.MODULE__TASKS:
        getTasks().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MICPackage.MODULE__MODULE_PROLOG:
        return moduleProlog != null && !moduleProlog.isEmpty();
      case MICPackage.MODULE__TYPE:
        return TYPE_EDEFAULT == null ? type != null : !TYPE_EDEFAULT.equals(type);
      case MICPackage.MODULE__VALUE:
        return value != VALUE_EDEFAULT;
      case MICPackage.MODULE__DECALARATIONS:
        return decalarations != null && !decalarations.isEmpty();
      case MICPackage.MODULE__TASKS:
        return tasks != null && !tasks.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (type: ");
    result.append(type);
    result.append(", value: ");
    result.append(value);
    result.append(')');
    return result.toString();
  }

} //ModuleImpl
