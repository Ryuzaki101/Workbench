/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package de.wisag.automation.micas.module.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import de.wisag.automation.micas.module.util.ModuleAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support
 * Viewers. The adapters generated by this factory convert EMF adapter
 * notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}. The
 * adapters also support Eclipse property sheets. Note that most of the adapters
 * are shared among multiple instances. <!-- begin-user-doc --> <!--
 * end-user-doc -->
 *
 * @generated
 */
public class ModuleItemProviderAdapterFactory extends ModuleAdapterFactory
        implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    /**
     * This keeps track of the root adapter factory that delegates to this
     * adapter factory. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ComposedAdapterFactory parentAdapterFactory;

    /**
     * This is used to implement
     * {@link org.eclipse.emf.edit.provider.IChangeNotifier}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected IChangeNotifier changeNotifier = new ChangeNotifier();

    /**
     * This keeps track of all the supported types checked by
     * {@link #isFactoryForType isFactoryForType}. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected Collection<Object> supportedTypes = new ArrayList<>();

    /**
     * This constructs an instance. <!-- begin-user-doc --> <!-- end-user-doc
     * -->
     *
     * @generated
     */
    public ModuleItemProviderAdapterFactory() {
        supportedTypes.add(IEditingDomainItemProvider.class);
        supportedTypes.add(IStructuredItemContentProvider.class);
        supportedTypes.add(ITreeItemContentProvider.class);
        supportedTypes.add(IItemLabelProvider.class);
        supportedTypes.add(IItemPropertySource.class);
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.wisag.automation.micas.module.Module} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ModuleItemProvider moduleItemProvider;

    /**
     * This creates an adapter for a
     * {@link de.wisag.automation.micas.module.Module}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createModuleAdapter() {
        if (moduleItemProvider == null) {
            moduleItemProvider = new ModuleItemProvider(this);
        }

        return moduleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.wisag.automation.micas.module.Task} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected TaskItemProvider taskItemProvider;

    /**
     * This creates an adapter for a
     * {@link de.wisag.automation.micas.module.Task}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createTaskAdapter() {
        if (taskItemProvider == null) {
            taskItemProvider = new TaskItemProvider(this);
        }

        return taskItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.wisag.automation.micas.module.VariableAttribute} instances.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected VariableAttributeItemProvider variableAttributeItemProvider;

    /**
     * This creates an adapter for a
     * {@link de.wisag.automation.micas.module.VariableAttribute}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createVariableAttributeAdapter() {
        if (variableAttributeItemProvider == null) {
            variableAttributeItemProvider = new VariableAttributeItemProvider(this);
        }

        return variableAttributeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.wisag.automation.micas.module.ConstantAttribute} instances.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ConstantAttributeItemProvider constantAttributeItemProvider;

    /**
     * This creates an adapter for a
     * {@link de.wisag.automation.micas.module.ConstantAttribute}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createConstantAttributeAdapter() {
        if (constantAttributeItemProvider == null) {
            constantAttributeItemProvider = new ConstantAttributeItemProvider(this);
        }

        return constantAttributeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.wisag.automation.micas.module.ReferenceAttribute} instances.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ReferenceAttributeItemProvider referenceAttributeItemProvider;

    /**
     * This creates an adapter for a
     * {@link de.wisag.automation.micas.module.ReferenceAttribute}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createReferenceAttributeAdapter() {
        if (referenceAttributeItemProvider == null) {
            referenceAttributeItemProvider = new ReferenceAttributeItemProvider(this);
        }

        return referenceAttributeItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.wisag.automation.micas.module.FloatValue} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected FloatValueItemProvider floatValueItemProvider;

    /**
     * This creates an adapter for a
     * {@link de.wisag.automation.micas.module.FloatValue}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createFloatValueAdapter() {
        if (floatValueItemProvider == null) {
            floatValueItemProvider = new FloatValueItemProvider(this);
        }

        return floatValueItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.wisag.automation.micas.module.WordValue} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected WordValueItemProvider wordValueItemProvider;

    /**
     * This creates an adapter for a
     * {@link de.wisag.automation.micas.module.WordValue}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createWordValueAdapter() {
        if (wordValueItemProvider == null) {
            wordValueItemProvider = new WordValueItemProvider(this);
        }

        return wordValueItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.wisag.automation.micas.module.AttributeSpecification}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected AttributeSpecificationItemProvider attributeSpecificationItemProvider;

    /**
     * This creates an adapter for a
     * {@link de.wisag.automation.micas.module.AttributeSpecification}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createAttributeSpecificationAdapter() {
        if (attributeSpecificationItemProvider == null) {
            attributeSpecificationItemProvider = new AttributeSpecificationItemProvider(this);
        }

        return attributeSpecificationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.wisag.automation.micas.module.MicasDataTypeSpecification}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected MicasDataTypeSpecificationItemProvider micasDataTypeSpecificationItemProvider;

    /**
     * This creates an adapter for a
     * {@link de.wisag.automation.micas.module.MicasDataTypeSpecification}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createMicasDataTypeSpecificationAdapter() {
        if (micasDataTypeSpecificationItemProvider == null) {
            micasDataTypeSpecificationItemProvider = new MicasDataTypeSpecificationItemProvider(this);
        }

        return micasDataTypeSpecificationItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.wisag.automation.micas.module.Page} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected PageItemProvider pageItemProvider;

    /**
     * This creates an adapter for a
     * {@link de.wisag.automation.micas.module.Page}. <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createPageAdapter() {
        if (pageItemProvider == null) {
            pageItemProvider = new PageItemProvider(this);
        }

        return pageItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.wisag.automation.micas.module.IncomingOffpageConnector}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected IncomingOffpageConnectorItemProvider incomingOffpageConnectorItemProvider;

    /**
     * This creates an adapter for a
     * {@link de.wisag.automation.micas.module.IncomingOffpageConnector}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createIncomingOffpageConnectorAdapter() {
        if (incomingOffpageConnectorItemProvider == null) {
            incomingOffpageConnectorItemProvider = new IncomingOffpageConnectorItemProvider(this);
        }

        return incomingOffpageConnectorItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.wisag.automation.micas.module.OutgoingOffpageConnector}
     * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected OutgoingOffpageConnectorItemProvider outgoingOffpageConnectorItemProvider;

    /**
     * This creates an adapter for a
     * {@link de.wisag.automation.micas.module.OutgoingOffpageConnector}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createOutgoingOffpageConnectorAdapter() {
        if (outgoingOffpageConnectorItemProvider == null) {
            outgoingOffpageConnectorItemProvider = new OutgoingOffpageConnectorItemProvider(this);
        }

        return outgoingOffpageConnectorItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.wisag.automation.micas.module.Constant} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ConstantItemProvider constantItemProvider;

    /**
     * This creates an adapter for a
     * {@link de.wisag.automation.micas.module.Constant}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createConstantAdapter() {
        if (constantItemProvider == null) {
            constantItemProvider = new ConstantItemProvider(this);
        }

        return constantItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link de.wisag.automation.micas.module.Reference} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ReferenceItemProvider referenceItemProvider;

    /**
     * This creates an adapter for a
     * {@link de.wisag.automation.micas.module.Reference}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createReferenceAdapter() {
        if (referenceItemProvider == null) {
            referenceItemProvider = new ReferenceItemProvider(this);
        }

        return referenceItemProvider;
    }

    /**
     * This returns the root adapter factory that contains this factory. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public ComposeableAdapterFactory getRootAdapterFactory() {
        return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
    }

    /**
     * This sets the composed adapter factory that contains this factory. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
        this.parentAdapterFactory = parentAdapterFactory;
    }

    /**
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public boolean isFactoryForType(Object type) {
        return supportedTypes.contains(type) || super.isFactoryForType(type);
    }

    /**
     * This implementation substitutes the factory itself as the key for the
     * adapter. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter adapt(Notifier notifier, Object type) {
        return super.adapt(notifier, this);
    }

    /**
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Object adapt(Object object, Object type) {
        if (isFactoryForType(type)) {
            Object adapter = super.adapt(object, type);
            if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
                return adapter;
            }
        }

        return null;
    }

    /**
     * This adds a listener. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void addListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.addListener(notifyChangedListener);
    }

    /**
     * This removes a listener. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void removeListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.removeListener(notifyChangedListener);
    }

    /**
     * This delegates to {@link #changeNotifier} and to
     * {@link #parentAdapterFactory}. <!-- begin-user-doc --> <!-- end-user-doc
     * -->
     *
     * @generated
     */
    @Override
    public void fireNotifyChanged(Notification notification) {
        changeNotifier.fireNotifyChanged(notification);

        if (parentAdapterFactory != null) {
            parentAdapterFactory.fireNotifyChanged(notification);
        }
    }

    /**
     * This disposes all of the item providers created by this factory. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void dispose() {
        if (moduleItemProvider != null) {
            moduleItemProvider.dispose();
        }
        if (taskItemProvider != null) {
            taskItemProvider.dispose();
        }
        if (variableAttributeItemProvider != null) {
            variableAttributeItemProvider.dispose();
        }
        if (constantAttributeItemProvider != null) {
            constantAttributeItemProvider.dispose();
        }
        if (referenceAttributeItemProvider != null) {
            referenceAttributeItemProvider.dispose();
        }
        if (floatValueItemProvider != null) {
            floatValueItemProvider.dispose();
        }
        if (wordValueItemProvider != null) {
            wordValueItemProvider.dispose();
        }
        if (attributeSpecificationItemProvider != null) {
            attributeSpecificationItemProvider.dispose();
        }
        if (micasDataTypeSpecificationItemProvider != null) {
            micasDataTypeSpecificationItemProvider.dispose();
        }
        if (pageItemProvider != null) {
            pageItemProvider.dispose();
        }
        if (incomingOffpageConnectorItemProvider != null) {
            incomingOffpageConnectorItemProvider.dispose();
        }
        if (outgoingOffpageConnectorItemProvider != null) {
            outgoingOffpageConnectorItemProvider.dispose();
        }
        if (constantItemProvider != null) {
            constantItemProvider.dispose();
        }
        if (referenceItemProvider != null) {
            referenceItemProvider.dispose();
        }
    }

}
